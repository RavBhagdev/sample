
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
targetCompatibility = 1.8

findMainClass.enabled = false

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/*Mapper**'])
        })
    }

}

test {
    beforeTest { desc ->
        println "Executing test ${desc.className}.${desc.name}"
    }
}

dependencies {
    if (project.hasProperty("cloud") && project.cloud == "development") {
        compile 'de.codecentric:spring-boot-admin-starter-client:1.3.5'
        compile "org.springframework.boot:spring-boot-actuator-docs"
        compile "org.springframework.boot:spring-boot-devtools"
    }

    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "com.fasterxml.jackson.core:jackson-databind"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
    compile 'org.realityforge.gelf4j:gelf4j:1.10'
    compile "org.springframework.cloud:spring-cloud-starter-sleuth"
    compile "org.springframework.cloud:spring-cloud-sleuth-zipkin"

    // Test Libraries
    testCompile group: 'org.hamcrest', name: 'hamcrest-core'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'org.assertj:assertj-core:3.9.0'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'org.mockito:mockito-core'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library'

}

// Workaround for https://github.com/spring-projects/spring-boot/issues/8308
// Can reinstate excludeDevtools in the bootRepackage task in next release
springBoot {
    excludeDevtools = !(project.hasProperty('cloud') && cloud == 'development');
}

bootRepackage {
    mainClass = 'org.innovateuk.ifs.Application'
    //    excludeDevtools = !(project.hasProperty('cloud') && cloud == 'development');

}

processResources {
    filesMatching("*.properties") {
        expand project.properties
    }
}

processTestResources {
    filesMatching("*.properties") {
        expand project.properties
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

repositories {
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
}

jar {
    manifest.attributes provider: 'gradle'
}

